{
    "swagger": "2.0",
    "info": {
        "description": "A robust RESTful API for a virtual garden management game built with Go.",
        "title": "Virtual Garden Management System API",
        "contact": {},
        "version": "1.0"
    },
    "basePath": "/api/v1",
    "paths": {
        "/auth/login": {
            "post": {
                "description": "Login with username and password to get JWT token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "authentication"
                ],
                "summary": "Authenticate user",
                "parameters": [
                    {
                        "description": "User login credentials",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.LoginRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.AuthResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Invalid credentials",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/auth/logout": {
            "post": {
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "description": "Logout user (client-side token removal)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "authentication"
                ],
                "summary": "Logout user",
                "responses": {
                    "200": {
                        "description": "Logout success message",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/auth/refresh": {
            "post": {
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "description": "Refresh the current JWT token to get a new one with extended expiry",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "authentication"
                ],
                "summary": "Refresh JWT token",
                "responses": {
                    "200": {
                        "description": "New token and expiry",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Invalid token",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/auth/register": {
            "post": {
                "description": "Create a new user account with the provided information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "authentication"
                ],
                "summary": "Register a new user",
                "parameters": [
                    {
                        "description": "User registration data",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.RegisterRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/handlers.AuthResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "409": {
                        "description": "Conflict - Username or email already exists",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/gardens": {
            "get": {
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "description": "Get all gardens for the current user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "gardens"
                ],
                "summary": "Get user gardens",
                "responses": {
                    "200": {
                        "description": "List of user gardens",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "description": "Create a new garden for the current user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "gardens"
                ],
                "summary": "Create a new garden",
                "parameters": [
                    {
                        "description": "Garden creation data",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.CreateGardenRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created garden",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/gardens/{id}": {
            "get": {
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "description": "Get a specific garden with all its plants",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "gardens"
                ],
                "summary": "Get garden details",
                "parameters": [
                    {
                        "type": "string",
                        "example": "\"123e4567-e89b-12d3-a456-426614174000\"",
                        "description": "Garden ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Garden details with plants",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad Request - Invalid garden ID",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Garden not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "description": "Update garden information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "gardens"
                ],
                "summary": "Update garden",
                "parameters": [
                    {
                        "type": "string",
                        "example": "\"123e4567-e89b-12d3-a456-426614174000\"",
                        "description": "Garden ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Garden update data",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.UpdateGardenRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Updated garden",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Garden not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "description": "Delete a garden and all its plants",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "gardens"
                ],
                "summary": "Delete garden",
                "parameters": [
                    {
                        "type": "string",
                        "example": "\"123e4567-e89b-12d3-a456-426614174000\"",
                        "description": "Garden ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Garden deleted successfully",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad Request - Invalid garden ID",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Garden not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/gardens/{id}/plants": {
            "post": {
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "description": "Plant a seed in a garden",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "plants"
                ],
                "summary": "Plant a seed",
                "parameters": [
                    {
                        "type": "string",
                        "example": "\"123e4567-e89b-12d3-a456-426614174000\"",
                        "description": "Garden ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Plant data",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.PlantRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Planted seed",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Garden or plant type not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "409": {
                        "description": "Position already occupied",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/gardens/{id}/plants/{plantId}": {
            "put": {
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "description": "Water a plant to increase its water level",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "plants"
                ],
                "summary": "Water a plant",
                "parameters": [
                    {
                        "type": "string",
                        "example": "\"123e4567-e89b-12d3-a456-426614174000\"",
                        "description": "Garden ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "example": "\"123e4567-e89b-12d3-a456-426614174001\"",
                        "description": "Plant ID",
                        "name": "plantId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Water amount",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.WaterPlantRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Updated plant",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Plant not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "description": "Remove a plant from the garden",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "plants"
                ],
                "summary": "Remove a plant",
                "parameters": [
                    {
                        "type": "string",
                        "example": "\"123e4567-e89b-12d3-a456-426614174000\"",
                        "description": "Garden ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "example": "\"123e4567-e89b-12d3-a456-426614174001\"",
                        "description": "Plant ID",
                        "name": "plantId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Plant removed successfully",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Plant not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/gardens/{id}/plants/{plantId}/fertilize": {
            "post": {
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "description": "Apply fertilizer to a plant",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "plants"
                ],
                "summary": "Fertilize a plant",
                "parameters": [
                    {
                        "type": "string",
                        "example": "\"123e4567-e89b-12d3-a456-426614174000\"",
                        "description": "Garden ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "example": "\"123e4567-e89b-12d3-a456-426614174001\"",
                        "description": "Plant ID",
                        "name": "plantId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Fertilizer amount",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.FertilizePlantRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Updated plant",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Plant not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/gardens/{id}/plants/{plantId}/harvest": {
            "post": {
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "description": "Harvest a mature plant to get rewards",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "plants"
                ],
                "summary": "Harvest a plant",
                "parameters": [
                    {
                        "type": "string",
                        "example": "\"123e4567-e89b-12d3-a456-426614174000\"",
                        "description": "Garden ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "example": "\"123e4567-e89b-12d3-a456-426614174001\"",
                        "description": "Plant ID",
                        "name": "plantId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Harvest results",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad Request - Plant not ready for harvest",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Plant not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/plants": {
            "get": {
                "description": "Get a list of all available plant types",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "plants"
                ],
                "summary": "List all plant types",
                "responses": {
                    "200": {
                        "description": "List of plant types",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/users/profile": {
            "get": {
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "description": "Get the current user's profile and achievements",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Get user profile",
                "responses": {
                    "200": {
                        "description": "User profile with achievements",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "description": "Update the current user's profile information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Update user profile",
                "parameters": [
                    {
                        "description": "Profile update data",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Updated user profile",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/weather/current": {
            "get": {
                "description": "Get current weather conditions and season",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "weather"
                ],
                "summary": "Get current weather",
                "responses": {
                    "200": {
                        "description": "Current weather and season",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/weather/forecast": {
            "get": {
                "description": "Get weather predictions for next 24 hours",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "weather"
                ],
                "summary": "Get weather forecast",
                "responses": {
                    "200": {
                        "description": "Weather forecasts",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/weather/history": {
            "get": {
                "description": "Get historical weather data for the last 24 records",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "weather"
                ],
                "summary": "Get weather history",
                "responses": {
                    "200": {
                        "description": "Weather history",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "handlers.AuthResponse": {
            "type": "object",
            "properties": {
                "expires_at": {
                    "type": "string",
                    "example": "2024-01-02T00:00:00Z"
                },
                "token": {
                    "type": "string",
                    "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                },
                "user": {
                    "$ref": "#/definitions/models.User"
                }
            }
        },
        "handlers.CreateGardenRequest": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "description": {
                    "type": "string",
                    "example": "A beautiful garden for growing vegetables"
                },
                "name": {
                    "type": "string",
                    "maxLength": 100,
                    "minLength": 1,
                    "example": "My First Garden"
                }
            }
        },
        "handlers.FertilizePlantRequest": {
            "type": "object",
            "required": [
                "amount"
            ],
            "properties": {
                "amount": {
                    "type": "integer",
                    "maximum": 100,
                    "minimum": 1,
                    "example": 20
                }
            }
        },
        "handlers.LoginRequest": {
            "type": "object",
            "required": [
                "password",
                "username"
            ],
            "properties": {
                "password": {
                    "type": "string",
                    "example": "securepassword123"
                },
                "username": {
                    "type": "string",
                    "example": "gardener123"
                }
            }
        },
        "handlers.PlantRequest": {
            "type": "object",
            "required": [
                "plant_type_id",
                "position"
            ],
            "properties": {
                "plant_type_id": {
                    "type": "string",
                    "example": "123e4567-e89b-12d3-a456-426614174000"
                },
                "position": {
                    "type": "integer",
                    "maximum": 8,
                    "minimum": 0,
                    "example": 0
                }
            }
        },
        "handlers.RegisterRequest": {
            "type": "object",
            "required": [
                "email",
                "password",
                "username"
            ],
            "properties": {
                "email": {
                    "type": "string",
                    "example": "gardener@example.com"
                },
                "first_name": {
                    "type": "string",
                    "example": "John"
                },
                "last_name": {
                    "type": "string",
                    "example": "Doe"
                },
                "password": {
                    "type": "string",
                    "minLength": 6,
                    "example": "securepassword123"
                },
                "username": {
                    "type": "string",
                    "maxLength": 20,
                    "minLength": 3,
                    "example": "gardener123"
                }
            }
        },
        "handlers.UpdateGardenRequest": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string",
                    "example": "Updated garden description"
                },
                "name": {
                    "type": "string",
                    "example": "Updated Garden Name"
                }
            }
        },
        "handlers.WaterPlantRequest": {
            "type": "object",
            "required": [
                "amount"
            ],
            "properties": {
                "amount": {
                    "type": "integer",
                    "maximum": 100,
                    "minimum": 1,
                    "example": 30
                }
            }
        },
        "models.Achievement": {
            "type": "object",
            "properties": {
                "category": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "icon": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "points": {
                    "type": "integer"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "models.Garden": {
            "type": "object",
            "properties": {
                "created_at": {
                    "description": "Timestamps",
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "fertilizer_level": {
                    "description": "0-100",
                    "type": "integer"
                },
                "has_composter": {
                    "type": "boolean"
                },
                "has_greenhouse": {
                    "type": "boolean"
                },
                "has_sprinkler": {
                    "description": "Garden upgrades",
                    "type": "boolean"
                },
                "id": {
                    "type": "string"
                },
                "last_fertilized_at": {
                    "type": "string"
                },
                "last_watered_at": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "plants": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Plant"
                    }
                },
                "size": {
                    "description": "Garden properties",
                    "type": "integer"
                },
                "soil_quality": {
                    "description": "0-100",
                    "type": "integer"
                },
                "updated_at": {
                    "type": "string"
                },
                "user": {
                    "description": "Relationships",
                    "allOf": [
                        {
                            "$ref": "#/definitions/models.User"
                        }
                    ]
                },
                "user_id": {
                    "type": "string"
                },
                "water_level": {
                    "description": "0-100",
                    "type": "integer"
                }
            }
        },
        "models.Plant": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "garden": {
                    "description": "Relationships",
                    "allOf": [
                        {
                            "$ref": "#/definitions/models.Garden"
                        }
                    ]
                },
                "garden_id": {
                    "type": "string"
                },
                "growth_progress": {
                    "description": "0-100",
                    "type": "number"
                },
                "harvested_at": {
                    "type": "string"
                },
                "health": {
                    "description": "0-100",
                    "type": "integer"
                },
                "id": {
                    "type": "string"
                },
                "last_fertilized_at": {
                    "type": "string"
                },
                "last_watered_at": {
                    "type": "string"
                },
                "plant_type": {
                    "$ref": "#/definitions/models.PlantType"
                },
                "plant_type_id": {
                    "type": "string"
                },
                "planted_at": {
                    "description": "Timestamps",
                    "type": "string"
                },
                "position": {
                    "description": "Position in garden grid (0-8 for 3x3 grid)",
                    "type": "integer"
                },
                "stage": {
                    "description": "Plant state",
                    "allOf": [
                        {
                            "$ref": "#/definitions/models.PlantStage"
                        }
                    ]
                },
                "updated_at": {
                    "type": "string"
                },
                "water_level": {
                    "description": "0-100",
                    "type": "integer"
                }
            }
        },
        "models.PlantStage": {
            "type": "string",
            "enum": [
                "seed",
                "sprout",
                "growing",
                "mature",
                "harvestable",
                "withered"
            ],
            "x-enum-varnames": [
                "PlantStageSeed",
                "PlantStageSprout",
                "PlantStageGrowing",
                "PlantStageMature",
                "PlantStageHarvestable",
                "PlantStageWithered"
            ]
        },
        "models.PlantType": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "experience_value": {
                    "description": "XP per harvest",
                    "type": "integer"
                },
                "fertilizer_needs": {
                    "description": "0-100",
                    "type": "integer"
                },
                "growth_time": {
                    "description": "Growth properties",
                    "type": "integer"
                },
                "harvest_value": {
                    "description": "coins per item",
                    "type": "integer"
                },
                "icon": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "min_level": {
                    "description": "Requirements",
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "rarity": {
                    "description": "Rarity",
                    "type": "string"
                },
                "season": {
                    "description": "spring, summer, autumn, winter, all",
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "water_needs": {
                    "description": "0-100",
                    "type": "integer"
                },
                "weather": {
                    "description": "sunny, cloudy, rainy, all",
                    "type": "string"
                },
                "yield": {
                    "description": "Harvest properties",
                    "type": "integer"
                }
            }
        },
        "models.User": {
            "type": "object",
            "properties": {
                "achievements": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.UserAchievement"
                    }
                },
                "avatar": {
                    "type": "string"
                },
                "coins": {
                    "type": "integer"
                },
                "created_at": {
                    "description": "Timestamps",
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "experience": {
                    "type": "integer"
                },
                "first_name": {
                    "type": "string"
                },
                "gardens": {
                    "description": "Relationships",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Garden"
                    }
                },
                "id": {
                    "type": "string"
                },
                "language": {
                    "type": "string"
                },
                "last_login_at": {
                    "type": "string"
                },
                "last_name": {
                    "type": "string"
                },
                "level": {
                    "description": "Game progression",
                    "type": "integer"
                },
                "timezone": {
                    "description": "Game settings",
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "models.UserAchievement": {
            "type": "object",
            "properties": {
                "achievement": {
                    "$ref": "#/definitions/models.Achievement"
                },
                "achievement_id": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "unlocked_at": {
                    "type": "string"
                },
                "user": {
                    "description": "Relationships",
                    "allOf": [
                        {
                            "$ref": "#/definitions/models.User"
                        }
                    ]
                },
                "user_id": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "bearer": {
            "description": "Enter the token with the `Bearer ` prefix, e.g. \"Bearer abcde12345\"",
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}